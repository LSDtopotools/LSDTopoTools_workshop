=== Running your first analysis

It is now time to do some number crunching of your DEM using *LSDTopoTools*. In this part we will get slope, curvature and hillshade rasters. 

==== Looking at the example data

. At this stage you should have a terminal window or secure shell window open in the `Analysis_driver` directory. 
. Use the **SECOND** terminal window to go to the data folder (if you've not got another window, or secure shell, open one now). 
. Use this second window to go to the `LSDTT_workshop_data directory`:
+
[source,console]
----
$ cd /path/to/LSDTopoTools/Topographic_projects/LSDTT_workshop_data/
----
+ 
. We have provided an example parameter file in this directory. You can see all the stuff in the `LSDTT_workshop_data` directory by using the `ls` command:
+
[source,console]
----
$ ls
README.asc  WAWater.bil                       Workshop_ChiTool.driver
WA.bil      WAWater.hdr
WA.hdr      Workshop_AD_example.LSDTT_driver
----
+
. The file you want is `Workshop_AD_example.LSDTT_driver`. If you are using our Vagrant setup then this doens't need to be edited. But if you are running on an Edinurgh server or are using your own data, this file will need to be modified. 
+
==== Modifying the LSDTT_driver file

.Editing text files
*****************************************************
We have parameter files (sometimes called `driver` files) that tell LSDTopoTools what data to look for, what analyses to do, etc. You will need to modify these files. You need a **text editor** to do this. You *CANNOT* usa a word processor (like Word or Wordpad) since it inserts a load of formatting. You just need something that changes plain text without any fuss. 

You can edit text in Linux using https://www.gnu.org/software/emacs/[emacs] or https://en.wikipedia.org/wiki/Vim_(text_editor)[vim], but these are not great for people uncomfortable in Linux. 

However, you don't need to be in Linux to edit these files!

* At Edinburgh, you can map your network drives so you can see files on our linux servers and in your Windows or MacOS desktop. So edit your files there. 
* Outside Edinburgh, you should be using our Vagrant setup, and in that case files are snyced between your linux server and your native operating system so you can use a local text editor. 

So what text editor to use?
* If you have administrator permission on your computer, I recommend http://brackets.io/[brackets] for text editing. It works on Windows, MacOS and Linux.  
* If you are in an Edinburgh computer lab, you should have http://www.pspad.com/en/[PSPad] installed so you can use that. 
*****************************************************

. Hopefully you know what a text editor is (if not read the box above!). Open `Workshop_AD_example.LSDTT_driver` in a text editor. It looks like this
+
[source,paramfile]
----
# This is a driver file for LSDTopoTools
# Any lines with the # symbol in the first row will be ignored

# File information
# IMPORTANT: you will need to modify the file path to reflect your directory structure
# NOTE: If you want to use a smaller test DEM use WA instead of WAWater
dem read extension: bil
dem write extension: bil
read path: /LSDTopoTools/Topographic_projects/LSDTT_workshop_data/
write path: /LSDTopoTools/Topographic_projects/LSDTT_workshop_data/
read fname: WAWater

# Parameters for various topographic analysis
min_slope_for_fill: 0.0001

# Parameters for polyfit and slope calculations
polyfit_window_radius: 19
slope_method: polyfit

# The different analyses to be run
write hillshade: true
write slope: true
write curvature: true
----
+
. Whoa! What is all this stuff? There are instructions to our program telling the computer what to do. Most of this you can ignore (for now), but for us the important lines are:
+
[source,paramfile]
----
read path: /LSDTopoTools/Topographic_projects/LSDTT_workshop_data/
write path: /LSDTopoTools/Topographic_projects/LSDTT_workshop_data/
read fname: WAWater
----
+
. The two lines with `path` tell the program where to read and write the data. The `read fname` is the name of the file on which you will perform analysis. 
+
. The `read fname` is the *PREFIX* of the DEM you will use. So if your DEM is called `WA.bil` then `read fname:` wil be  `WA`. 
+
. To see where your data is, type `pwd` in the `LSDTT_workshop_data`:
+
[source,console]
----
$ pwd
homes/smudd/LSDTopoTools/Topographic_projects/LSDTT_workshop_data/
----
+
. **YOUR directory will be different!** Copy your directory into the file:
+
[source,paramfile]
----
read path: /my/directory/LSDTopoTools/Topographic_projects/LSDTT_workshop_data/
write path: /my/directory/LSDTopoTools/Topographic_projects/LSDTT_workshop_data/
----
+
NOTE: If you are using vagrant the directories will work without any modification. 
+ 
. You can also change the name of the data file. It can be your own data, or it can be the much smaller DEM `WA.bil`. 

==== Using your own data

If you use your own data you need to make sure it is in the correct format. You can read all about that http://lsdtopotools.github.io/LSDTT_book/#_preparing_your_data[in our main documentation]. But the main points are:

* Data *MUST* be in a projected coordinate system. We prefer UTM. To convert to UTM from anything else http://lsdtopotools.github.io/LSDTT_book/#_gdal_2[use GDAL].
* Data *MUST* be in one of 3 formats, but I am only going to tell you about one since it is by far the best: http://www.harrisgeospatial.com/docs/ENVIImageFiles.html[ENVI bil]. *THIS IS NOT THE SAME AS ESRI BIL!!!*. To convert from other formats to *ENVI bil* http://lsdtopotools.github.io/LSDTT_book/#_gdal_2[use GDAL].

==== Running the analysis

. Okay, at this point you should have modified the `Workshop_AD_example.LSDTT_driver` file so that it reflects the directory of your data and the name of your data. Don't touch anything else. 
+
. Go back to the terminal window where you ran the `make` command (remember, use two terminal or SSH windows: it makes things easer). 
. In that window make sure you have the program: type
+
[source,console]
----
$ ls LSDTT_analysis_from_paramfile.out
----
+
If it says `no such file or directory` it means you are either in the wrong directory or have not compiled the program. If that is the case use `pwd` to figure out where you are and try to get back to the folder with the `.out` file. 
+
. If you have that file, type
+
[source,console]
----
$ ./LSDTT_analysis_from_paramfile.out /my/directory/LSDTopoTools/Topographic_projects/LSDTT_workshop_data/ Workshop_AD_example.LSDTT_driver 
----
+ 
IMPORTANT: You will need to update the path to reflect where your data is. The easiest way to do this is to type `pwd` in the terminal window with your data and copy it into the window with the program. 
+ 
. When you run this command, the program will work for a little while and then spit out several rasters that will sit in your data folder. The raster that it prints are determined by these lines in the `LSDTT_driver`:
+
[source,paramfile]
----
# The different analyses to be run
write hillshade: true
write slope: true
write curvature: true
----
+
So hopefully it is obvious that you will get slope, curvature and hillshade rasters. 
+
.You can see what is there using `ls`:
+
[source,console]
----
$ ls
README.asc   Workshop_AD_example_curvature.bil  Workshop_AD_example_slope.bil
WA.bil       Workshop_AD_example_curvature.hdr  Workshop_AD_example_slope.hdr
WA.hdr       Workshop_AD_example_hs.bil         Workshop_ChiTool.driver
WAWater.bil  Workshop_AD_example_hs.hdr
WAWater.hdr  Workshop_AD_example.LSDTT_driver
----
+
. The rasters have filenames that reflect what they are (`HS`, for example, denotes a hillshade raster). Okay, we can now move on to looking at the data!



